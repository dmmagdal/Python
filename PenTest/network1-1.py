# network1-1.py
# scans the local network and creates a graph of all devices connected 
# to the network

import subprocess, ipaddress
import socket, os, re

# retrieve device's ipaddress
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s6 = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)
s.connect(('google.com', 0))
s6.connect(('google.com', 0))
ip = s.getsockname()[0]
ip6 = s6.getsockname()[0]
end = re.search('^[\d]{1,3}.[\d]{1,3}.[\d]{1,3}.[\d]{1,3}', ip)
end6 = re.search('^[\d]{1,3}.[\d]{1,3}.[\d]{1,3}.[\d]{1,3}.[\d]{1,3}.[\d]{1,3}', ip6)
print("IPv4 Address "+str(end.group(0)))
print("IPv6 Address "+str(end6.group(0)))

#print(type(end.group(0)))
#print(end.group(0))

#ip = input("Enter a network address in CIDR format(ex.192.168.1.0/24): ")

# create network
ip_net = ipaddress.ip_network(end.group(0)+"/23", strict = False)
# set strict = false to
#ip_net = ipaddress.ip_network(ip)

#print(ip_net)
#print(ip_net.hosts())


# get all hosts on network
all_hosts = list(ip_net.hosts())
print(all_hosts[:9999])


# configure subprocess to hide console window
info = subprocess.STARTUPINFO()
info.dwFlags |= subprocess.STARTF_USESHOWWINDOW
info.wShowWindow = subprocess.SW_HIDE


print(len(all_hosts))

# for each ip address in the subnet
# run the ping command with subprocess.popen interface
for i in range(len(all_hosts)):
	#output = subprocess.Popen(['ping', '-n', '1', 'w', '500', str(all_hosts[i])], 
	#		stdout = subprocess.PIPE, startupinfo = info).communicate()[0]
	output = subprocess.Popen(['ping', str(all_hosts[i])], 
			stdout = subprocess.PIPE, startupinfo = info).communicate()[0]

	if "Destination host unreachable" in output.decode('utf-8'):
		print(str(all_hosts[i]), "is Offline")
	elif "Request timed out" in output.decode('utf-8'):
		print(str(all_hosts[i]), "is Offline")
	else:
		print(str(all_hosts[i]), "is Online")