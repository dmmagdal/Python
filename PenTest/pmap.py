# pmap.py
# uses python-nmap module to create network scanner
# Python 3.6
# Linux


import nmap

# Create new Scanner object
scanner = nmap.PortScanner()

print("Welcome, this is a simple nmap automation tool\n")
print("------------------------------------------------")

ip_address = input("Please enter a ip address you want to scan: ")
print("Target ip address: "+str(ip_address))
type(ip_address)

response = input("""\n Please enter the type of scan you want to run
					1) SYN ACK Scan
					2) UDP Scan
					3) Comprehensive Scan""")
print("\n Scan selected: "+str(response))

if response == "1":
	print("Nmap version: "+str(scanner.nmap_version()))
	# Provide ip address, port range, and the type of scan
	scanner.scan(ip_address, "1-1024", "-v -sS")
	print(scanner.scaninfo())
	print("Ip status: "+str(scanner[ip_address].state))
	print(scanner[ip_address].all_protocols())
	# Display open ports with keys()
	print("Open ports: "+str(scanner[ip_address]["tcp"].keys()))
elif response == "2":
	print("Nmap version: "+str(scanner.nmap_version()))
	# Provide ip address, port range, and the type of scan
	scanner.scan(ip_address, "1-1024", "-v -sU")
	print(scanner.scaninfo())
	print("Ip status: "+str(scanner[ip_address].state))
	print(scanner[ip_address].all_protocols())
	# Display open ports with keys()
	print("Open ports: "+str(scanner[ip_address]["udp"].keys()))
elif response == "3":
	print("Nmap version: "+str(scanner.nmap_version()))
	# Provide ip address, port range, and the type of scan
	scanner.scan(ip_address, "1-1024", "-v -sU -sV -sC -A -O")
	print(scanner.scaninfo())
	print("Ip status: "+str(scanner[ip_address].state))
	print(scanner[ip_address].all_protocols())
	# Display open ports with keys()
	print("Open ports: "+str(scanner[ip_address]["tcp"].keys()))
else:
	print("Please enter a valid option")
